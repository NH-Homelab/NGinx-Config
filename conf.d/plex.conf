server {
    listen 80;
    listen [::]:80;
    server_name watch.nicholashenley.com;

    return 301 https://$host$request_uri;
}

server{
    listen 443 ssl;
    server_name watch.nicholashenley.com;

    ssl_certificate /etc/nginx/certs/nginx.crt;
    ssl_certificate_key /etc/nginx/certs/nginx.key;

    set $Original_Host $host;
    set $Original_Path $request_uri;

    location / {
        auth_request /auth/verify;
        error_page 401 = /auth/google;

        proxy_pass http://plex.local:32400;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Protocol $scheme;
        proxy_set_header X-Forwarded-Host $http_host;

        # Disable buffering when the nginx proxy gets very resource heavy upon streaming
        proxy_buffering off;
    }

    location /socket {
        proxy_pass http://plex.local:32400;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Protocol $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
    }
    
    location = /auth/verify {
         proxy_set_header Host auth.nicholashenley.com;

         proxy_set_header X-Original-Host $Original_Host;
         proxy_set_header X-Original-Path $Original_Path;

         proxy_pass http://controller.local:8000;
    }

    location = /auth/google {
         proxy_pass http://controller.local:8000;

         proxy_set_header X-Original-Host $Original_Host;
         proxy_set_header X-Original-Path $Original_Path;

         proxy_set_header Host $host;
         proxy_set_header X-Real-IP $remote_addr;
         proxy_set_header X-Forwarded-Proto $scheme;
    }
}
